package languagelab.mps.lang.text.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.lang.structure.constraints.Scopes;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ElementBinding_Constraints extends BaseConstraintsDescriptor {
  public ElementBinding_Constraints() {
    super(CONCEPTS.ElementBinding$Xu);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.concept_reference$dm6M, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return new SNodePointer("r:196d8a42-2b02-4579-9264-88517b407831(languagelab.mps.lang.text.constraints)", "8718780335865752724");
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            return Scopes.forConcepts(_context.getContextNode(), CONCEPTS.ConceptDeclaration$gH);
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ElementBinding$Xu = MetaAdapterFactory.getConcept(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143638L, "languagelab.mps.lang.text.structure.ElementBinding");
    /*package*/ static final SConcept ConceptDeclaration$gH = MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L, "jetbrains.mps.lang.structure.structure.ConceptDeclaration");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink concept_reference$dm6M = MetaAdapterFactory.getReferenceLink(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143638L, 0x7b555f3bc9143639L, "concept_reference");
  }
}
