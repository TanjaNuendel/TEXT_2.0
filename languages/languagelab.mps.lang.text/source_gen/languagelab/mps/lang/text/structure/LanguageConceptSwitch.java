package languagelab.mps.lang.text.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Arbitrary = 0;
  public static final int CompositeBinding = 1;
  public static final int ConstantBinding = 2;
  public static final int Editor = 3;
  public static final int ElementBinding = 4;
  public static final int NonTerminal = 5;
  public static final int Optional = 6;
  public static final int ParentSymbol = 7;
  public static final int PropertyBinding = 8;
  public static final int ReferenceBinding = 9;
  public static final int RightHandSide = 10;
  public static final int Rule = 11;
  public static final int RuleReference = 12;
  public static final int Symbol = 13;
  public static final int Terminal = 14;
  public static final int ValueBinding = 15;
  public static final int WhiteSpace = 16;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x94b477d9e67c45feL, 0x813c26d61ae04a91L);
    builder.put(0x7b555f3bc91301b0L, Arbitrary);
    builder.put(0x7b555f3bc9143629L, CompositeBinding);
    builder.put(0x7b555f3bc914362eL, ConstantBinding);
    builder.put(0x7b555f3bc9143634L, Editor);
    builder.put(0x7b555f3bc9143638L, ElementBinding);
    builder.put(0x7b555f3bc914363dL, NonTerminal);
    builder.put(0x7b555f3bc9143642L, Optional);
    builder.put(0x7b555f3bc914363bL, ParentSymbol);
    builder.put(0x7b555f3bc9143645L, PropertyBinding);
    builder.put(0x7b555f3bc9143646L, ReferenceBinding);
    builder.put(0x7b555f3bc9143649L, RightHandSide);
    builder.put(0x7b555f3bc914364cL, Rule);
    builder.put(0x7b555f3bcc74123dL, RuleReference);
    builder.put(0x7b555f3bc9143652L, Symbol);
    builder.put(0x7b555f3bc914363cL, Terminal);
    builder.put(0x7b555f3bcc741240L, ValueBinding);
    builder.put(0x7b555f3bcc741243L, WhiteSpace);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
