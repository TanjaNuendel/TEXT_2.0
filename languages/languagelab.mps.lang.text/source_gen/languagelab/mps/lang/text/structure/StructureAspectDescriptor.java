package languagelab.mps.lang.text.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptArbitrary = createDescriptorForArbitrary();
  /*package*/ final ConceptDescriptor myConceptCompositeBinding = createDescriptorForCompositeBinding();
  /*package*/ final ConceptDescriptor myConceptConstantBinding = createDescriptorForConstantBinding();
  /*package*/ final ConceptDescriptor myConceptEditor = createDescriptorForEditor();
  /*package*/ final ConceptDescriptor myConceptElementBinding = createDescriptorForElementBinding();
  /*package*/ final ConceptDescriptor myConceptNonTerminal = createDescriptorForNonTerminal();
  /*package*/ final ConceptDescriptor myConceptOptional = createDescriptorForOptional();
  /*package*/ final ConceptDescriptor myConceptParentSymbol = createDescriptorForParentSymbol();
  /*package*/ final ConceptDescriptor myConceptPropertyBinding = createDescriptorForPropertyBinding();
  /*package*/ final ConceptDescriptor myConceptReferenceBinding = createDescriptorForReferenceBinding();
  /*package*/ final ConceptDescriptor myConceptRightHandSide = createDescriptorForRightHandSide();
  /*package*/ final ConceptDescriptor myConceptRule = createDescriptorForRule();
  /*package*/ final ConceptDescriptor myConceptRuleReference = createDescriptorForRuleReference();
  /*package*/ final ConceptDescriptor myConceptSymbol = createDescriptorForSymbol();
  /*package*/ final ConceptDescriptor myConceptTerminal = createDescriptorForTerminal();
  /*package*/ final ConceptDescriptor myConceptValueBinding = createDescriptorForValueBinding();
  /*package*/ final ConceptDescriptor myConceptWhiteSpace = createDescriptorForWhiteSpace();
  /*package*/ final EnumerationDescriptor myEnumerationWhiteSpaceRole = new EnumerationDescriptor_WhiteSpaceRole();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptArbitrary, myConceptCompositeBinding, myConceptConstantBinding, myConceptEditor, myConceptElementBinding, myConceptNonTerminal, myConceptOptional, myConceptParentSymbol, myConceptPropertyBinding, myConceptReferenceBinding, myConceptRightHandSide, myConceptRule, myConceptRuleReference, myConceptSymbol, myConceptTerminal, myConceptValueBinding, myConceptWhiteSpace);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Arbitrary:
        return myConceptArbitrary;
      case LanguageConceptSwitch.CompositeBinding:
        return myConceptCompositeBinding;
      case LanguageConceptSwitch.ConstantBinding:
        return myConceptConstantBinding;
      case LanguageConceptSwitch.Editor:
        return myConceptEditor;
      case LanguageConceptSwitch.ElementBinding:
        return myConceptElementBinding;
      case LanguageConceptSwitch.NonTerminal:
        return myConceptNonTerminal;
      case LanguageConceptSwitch.Optional:
        return myConceptOptional;
      case LanguageConceptSwitch.ParentSymbol:
        return myConceptParentSymbol;
      case LanguageConceptSwitch.PropertyBinding:
        return myConceptPropertyBinding;
      case LanguageConceptSwitch.ReferenceBinding:
        return myConceptReferenceBinding;
      case LanguageConceptSwitch.RightHandSide:
        return myConceptRightHandSide;
      case LanguageConceptSwitch.Rule:
        return myConceptRule;
      case LanguageConceptSwitch.RuleReference:
        return myConceptRuleReference;
      case LanguageConceptSwitch.Symbol:
        return myConceptSymbol;
      case LanguageConceptSwitch.Terminal:
        return myConceptTerminal;
      case LanguageConceptSwitch.ValueBinding:
        return myConceptValueBinding;
      case LanguageConceptSwitch.WhiteSpace:
        return myConceptWhiteSpace;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationWhiteSpaceRole);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForArbitrary() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "Arbitrary", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc91301b0L);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.Symbol
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143652L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066717104");
    b.version(3);
    b.aggregate("nt", 0x7b555f3bc9143627L).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363dL).optional(true).ordered(true).multiple(false).origin("8887114150066796071").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompositeBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "CompositeBinding", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143629L);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.PropertyBinding
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143645L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796073");
    b.version(3);
    b.property("signifier", 0x7b555f3bc914362aL).type(PrimitiveTypeId.STRING).origin("8887114150066796074").done();
    b.associate("property", 0x7b555f3bc914362cL).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL).optional(true).origin("8887114150066796076").done();
    b.alias(":composite(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstantBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "ConstantBinding", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914362eL);
    b.class_(false, false, false);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796078");
    b.version(3);
    b.property("value", 0x7b555f3bc914362fL).type(PrimitiveTypeId.STRING).origin("8887114150066796079").done();
    b.property("type", 0x7b555f3bc9143631L).type(PrimitiveTypeId.STRING).origin("8887114150066796081").done();
    b.alias(":constant(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEditor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "Editor", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143634L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796084");
    b.version(3);
    b.aggregate("start", 0xd15219bdf17ccb6L).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc74123dL).optional(false).ordered(true).multiple(false).origin("942696650350513334").done();
    b.aggregate("rules", 0xd15219bdf17d02dL).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914364cL).optional(false).ordered(true).multiple(true).origin("942696650350514221").done();
    b.alias("edit");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElementBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "ElementBinding", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143638L);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.ValueBinding
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc741240L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796088");
    b.version(3);
    b.associate("concept_reference", 0x7b555f3bc9143639L).target(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L).optional(true).origin("8887114150066796089").done();
    b.alias(":element(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonTerminal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "NonTerminal", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363dL);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.RuleReference
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc74123dL);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796093");
    b.version(3);
    b.aggregate("binding", 0x7b555f3bc914363eL).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143645L).optional(true).ordered(true).multiple(false).origin("8887114150066796094").done();
    b.alias("nt");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOptional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "Optional", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143642L);
    b.class_(false, false, false);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796098");
    b.version(3);
    b.aggregate("nt", 0x7b555f3bc9143643L).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363dL).optional(true).ordered(true).multiple(false).origin("8887114150066796099").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParentSymbol() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "ParentSymbol", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363bL);
    b.class_(false, false, false);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796091");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPropertyBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "PropertyBinding", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143645L);
    b.class_(false, false, false);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796101");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "ReferenceBinding", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143646L);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.PropertyBinding
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143645L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796102");
    b.version(3);
    b.property("state", 0xd15219bdf1a4267L).type(PrimitiveTypeId.STRING).origin("942696650350674535").done();
    b.associate("property", 0x7b555f3bc9143647L).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da56L).optional(true).origin("8887114150066796103").done();
    b.alias(":reference(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRightHandSide() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "RightHandSide", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143649L);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.ParentSymbol
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363bL);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796105");
    b.version(3);
    b.aggregate("rhs", 0x7b555f3bc914364aL).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363bL).optional(true).ordered(true).multiple(true).origin("8887114150066796106").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "Rule", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914364cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796108");
    b.version(3);
    b.aggregate("vbind", 0xd15219bdf1869beL).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc741240L).optional(true).ordered(true).multiple(false).origin("942696650350553534").done();
    b.aggregate("rhs", 0xd15219bdf186cceL).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143649L).optional(true).ordered(true).multiple(true).origin("942696650350554318").done();
    b.alias("->");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRuleReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "RuleReference", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc74123dL);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.Symbol
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143652L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150123409981");
    b.version(3);
    b.associate("referenced_rule", 0x7b555f3bcc74123eL).target(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914364cL).optional(false).origin("8887114150123409982").done();
    b.alias("pnt");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSymbol() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "Symbol", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143652L);
    b.class_(false, true, false);
    // extends: languagelab.mps.lang.text.structure.ParentSymbol
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363bL);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796114");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTerminal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "Terminal", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc914363cL);
    b.class_(false, false, false);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150066796092");
    b.version(3);
    b.property("terminal", 0x7b555f3bc9143640L).type(PrimitiveTypeId.STRING).origin("8887114150066796096").done();
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValueBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "ValueBinding", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc741240L);
    b.class_(false, true, false);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150123409984");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhiteSpace() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.mps.lang.text", "WhiteSpace", 0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc741243L);
    b.class_(false, false, false);
    // extends: languagelab.mps.lang.text.structure.Symbol
    b.super_(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bc9143652L);
    b.origin("r:e345bfe4-a7ce-41f2-aad2-23740a591142(languagelab.mps.lang.text.structure)/8887114150123409987");
    b.version(3);
    b.property("role", 0x7b555f3bcc741244L).type(MetaIdFactory.dataTypeId(0x94b477d9e67c45feL, 0x813c26d61ae04a91L, 0x7b555f3bcc741247L)).origin("8887114150123409988").done();
    b.alias("ws(");
    return b.create();
  }
}
